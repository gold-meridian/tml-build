<Project Sdk="Microsoft.NET.Sdk" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Default settings for mods and related projects. -->
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>

        <!-- Configure tML to not use its default build settings; we do it
             ourselves -->
        <BuildMod>false</BuildMod>

        <!-- Fixes incremental build issues (including Hot Reload) by ommiting
             the shortened GitHub commit SHA from the assembly version.
             https://github.com/dotnet/sdk/issues/37027 -->
        <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
        <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Configures specific tasks the SDK provides. -->
        <TmlBuildMod Condition="'$(TmlBuildMod)' == ''">true</TmlBuildMod>
        <TmlBuildUseShaderCompile Condition="'$(TmlBuildUseShaderCompile)' == ''">$(TmlBuildMod)</TmlBuildUseShaderCompile>
        <TmlBuildUseLocalizationCompiler Condition="'$(TmlBuildUseLocalizationCompiler)' == ''">$(TmlBuildMod)</TmlBuildUseLocalizationCompiler>
        <TmlBuildPackageMod Condition="'$(TmlBuildPackageMod)' == ''">$(TmlBuildMod)</TmlBuildPackageMod>
        <TmlBuildIncludeSourceGenerators Condition="'$(TmlBuildIncludeSourceGenerators)' == ''">$(TmlBuildMod)</TmlBuildIncludeSourceGenerators>
        <TmlBuildGenerateLaunchSettings Condition="'$(TmlBuildGenerateLaunchSettings)' == ''">$(TmlBuildMod)</TmlBuildGenerateLaunchSettings>
        <TmlBuildUseDefaultModImpl Condition="'$(TmlBuildUseDefaultModImpl)' == ''">false</TmlBuildUseDefaultModImpl>

        <!-- Manually set here since it's locked behind BuildMod in tML. -->
        <DotNetName Condition=" '$(OS)' == 'Windows_NT' ">dotnet.exe</DotNetName>
        <DotNetName Condition=" '$(OS)' == 'Unix' ">dotnet</DotNetName>
        <DotNetName Condition=" '$(DotNetName)' == '' ">dotnet</DotNetName>
    </PropertyGroup>

    <!-- Relevant default settings for tml-build. -->
    <PropertyGroup>
        <!-- TmodOutputPath may be specified to override default logic -->
        <TmlTargetsPath Condition="'$(TmlTargetsPath)' == ''">$(MSBuildProjectDirectory)\.tml-build\TML.targets</TmlTargetsPath>
        <TmlVersion Condition="'$(TmlVersion)' == ''">stable</TmlVersion>

        <!-- TmodOutputPath may be specified to override default logic -->
        <!-- <TmodOutputPath Condition="'$(TmodOutputPath)' == ''"></TmodOutputPath> -->

        <ModDescriptionPath Condition="'$(ModDescriptionPath)' == ''">$(MSBuildProjectDirectory)\description.txt</ModDescriptionPath>

        <!-- Prioritize TML.Mod.toml, but accept build.txt as a fallback. -->
        <!-- <ModManifestPath Condition="'$(ModManifestPath)' == '' And Exists('$(MSBuildProjectDirectory)\TML.Mod.toml')">$(MSBuildProjectDirectory)\TML.Mod.toml</ModManifestPath> -->
        <ModManifestPath Condition="'$(ModManifestPath)' == ''">$(MSBuildProjectDirectory)\build.txt</ModManifestPath>

        <!-- You can select features to apply when bootstrapping your tModLoader
             development process.  These may make development better on certain
             platforms or aid in general developer experience.  This is a list
             delimited by ';': author.flag1;author.flag2
             
             See FEATURES.md for a list of available flags.
             -->
        <TmlBuildBootstrapFeatures Condition="'$(TmlBuildBootstrapFeatures)' == ''">tomat.enablemod;lolxd87.splashskip;ppeb.netcoredbg</TmlBuildBootstrapFeatures>
    </PropertyGroup>

    <Import Condition="Exists('$(TmlTargetsPath)')" Project="$(TmlTargetsPath)"/>

    <!-- Include relevant non-code files. -->
    <ItemGroup>
        <!-- build manifests -->
        <AdditionalFiles Include="build.txt"/>
        <!-- <AdditionalFiles Include="TML.Mod.toml"/> -->

        <!-- localization -->
        <!-- <LocalizationCompile Include="**/*.lang"/> -->
        <LocalizationCompile Include="**/*.hjson"/>
        <AdditionalFiles Include="**/*.hjson"/>

        <!-- images -->
        <AdditionalFiles Include="**/*.rawimg"/> <!-- not included by tml -->
        <AdditionalFiles Include="**/*.png"/>

        <!-- shaders (effects) -->
        <ShaderCompile Include="**/*.hlsl"/> <!-- not included by tml -->
        <ShaderCompile Include="**/*.fx"/>
        <AdditionalFiles Include="**/*.fxc"/> <!-- Compiled objects -->

        <!-- Include header files too (as part of shader support), but don't
             treat them as shaders to be compiled. -->
        <AdditionalFiles Include="**/*.h"/> <!-- not included by tml -->

        <!-- sfx and music -->
        <AdditionalFiles Include="**/*.wav"/>
        <AdditionalFiles Include="**/*.ogg"/>
        <AdditionalFiles Include="**/*.mp3"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Helpful to automaticlly important any libraryes placed in `lib/`
             (still necessary to explicitly add them to `dllReferences`!). -->
        <Reference Include="$(MSBuildProjectFileDirectory)lib\**\*.dll"/>
    </ItemGroup>

    <!-- Additional useful references. -->
    <ItemGroup>
        <!-- No reason not to; useful for analyzers.  Would be nice to convince
             tML to annotate their own assemblies! -->
        <PackageReference Include="JetBrains.Annotations" Version="2025.2.2"/>

        <!-- Current assembly publicizer of choice. -->
        <PackageReference Include="Krafs.Publicizer" Version="2.3.0" PrivateAssets="all" ExcludeAssets="runtime"/>

        <!-- It's reasonable to publicize tModLoader by default. -->
        <Publicize Include="tModLoader" IncludeCompilerGeneratedMembers="false" IncludeVirtualMembers="false"/>
    </ItemGroup>

    <!-- Add analyzers and source generators. -->
    <ItemGroup>
        <Analyzer Condition="'$(TmlBuildIncludeSourceGenerators)' == 'true'" Include="$(TmlBuildAnalyzersRoot)*.dll"/>
    </ItemGroup>

    <!-- Taken from: <https://github.com/krafs/Publicizer/pull/128>.  This is
     used to fix an annoying warning because the publicizer we're using
     emits a type also included by MonoMod.Utils. -->
    <Target Name="RemoveIgnoresAccessChecksToAttributeCs" AfterTargets="PublicizeAssemblies">
        <ItemGroup>
            <FilesToRemove Include="@(Compile)" Condition="'%(Filename)' == 'IgnoresAccessChecksToAttribute'"/>
        </ItemGroup>
        <ItemGroup>
            <Compile Remove="@(FilesToRemove)"/>
        </ItemGroup>
    </Target>

    <!-- Override tML-provided BuildMod target since we implement our own.
         This is now covered by the BuildMod property, but let's keep this to
         account for older versions. -->
    <Target Name="BuildMod"/>

    <!-- Produce a launchSettings.json file to run the mod. -->
    <UsingTask TaskName="LaunchSettingsTask" AssemblyFile="Tomat.TML.Build.MSBuild.dll"/>
    <Target Name="ProduceBootstrappedLaunchSettingsForMod" BeforeTargets="BeforeBuild" Condition="'$(TmlBuildGenerateLaunchSettings)' == 'true'">
        <LaunchSettingsTask ProjectDirectory="$(MSBuildProjectDirectory)"/>
    </Target>

    <!-- Install the requested tML version before any processing occurs that
         tries to use it. -->
    <UsingTask TaskName="TmlVersionTask" AssemblyFile="Tomat.TML.Build.MSBuild.dll"/>
    <Target Name="ProcessTmlVersionBeforeReferencesAreResolved" BeforeTargets="ResolveReferences">
        <TmlVersionTask Version="$(TmlVersion)" TargetsPath="$(TmlTargetsPath)"/>
    </Target>

    <!-- Package the most post-build into a .tmod file. -->
    <UsingTask TaskName="PackageModTask" AssemblyFile="Tomat.TML.Build.MSBuild.dll"/>
    <Target Name="PackageMod" AfterTargets="Build" Condition="'$(TmlBuildPackageMod)' == 'true'">
        <!-- all of these refs are TODO -->
        <PackageModTask PackageReferences="@(PackageReferences)"
                        ProjectReferences="@(_ResolvedProjectReferencePaths)"
                        ReferencePaths="@(ModReference)"
                        ModReferences="@(ReferencePath)"
                        ProjectDirectory="$(MSBuildProjectDirectory)"
                        OutputPath="$(OutputPath)"
                        AssemblyName="$(AssemblyName)"
                        TmlVersion="$(TmlVersion)"
                        TmodOutputPath="$(TmodOutputPath)"
                        BuildFilePath="$(ModManifestPath)"
                        DescriptionFilePath="$(ModDescriptionPath)"/>
    </Target>

    <UsingTask TaskName="CompileLocalizationTask" AssemblyFile="Tomat.TML.Build.MSBuild.dll"/>
    <Target Name="CompileLocalization" BeforeTargets="PreBuildEvent" Condition="'$(TmlBuildUseLocalizationCompiler)' == 'true'">
        <CompileLocalizationTask CompilationUnits="@(LocalizationCompile)"
                                 ProjectDirectory="$(MSBuildProjectDirectory)"/>
    </Target>

    <UsingTask TaskName="CompileShadersTask" AssemblyFile="Tomat.TML.Build.MSBuild.dll"/>
    <Target Name="CompileShaders" BeforeTargets="PreBuildEvent" Condition="'$(TmlBuildUseShaderCompile)' == 'true'">
        <CompileShadersTask CompilationUnits="@(ShaderCompile)"
                            NativesDir="$(TmlBuildNativeRoot)"
                            ProjectDirectory="$(MSBuildProjectDirectory)"/>
    </Target>

</Project>